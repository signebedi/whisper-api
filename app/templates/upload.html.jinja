{% extends "base.html.jinja" %}

{% block title %}
Audio Uploader
{% endblock %}

{% block content %}
<h1>Upload Your Audio</h1>
<p>Select an audio file to upload, then submit it for transcription.</p>

<div class="controls">
    <form id="uploadForm" enctype="multipart/form-data">
        <fieldset class="form-group" style="padding-top: 20px;">
            <input type="file" id="audioFile" class="form-control" name="audio" accept="audio/*" required>
            <button type="submit" class="btn btn-success" id="submitButton" style="margin-top: 20px;">Submit</button>
            <div class="spinner-border spinner-border-sm loading-circle" role="status" style="display: none;"></div>
        </fieldset>
    </form>
</div>

<div id="statusHeader" class="container mt-5 results-div"></div>
<div id="statusMessage" class="container mt-5 results-div"></div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const uploadForm = document.getElementById('uploadForm');
    const statusHeader = document.getElementById('statusHeader');
    const statusMessage = document.getElementById('statusMessage');

    uploadForm.onsubmit = function(e) {
        e.preventDefault();
        const audioFile = document.getElementById('audioFile').files[0];
        if (!audioFile) {
            alert('Please select an audio file.');
            return;
        }

        const submitButton = document.getElementById('submitButton');
        const spinner = document.querySelector('.loading-circle');

        submitButton.disabled = true;  // Disable the submit button
        submitButton.innerText = 'Loading...';  // Change submit button text to 'Loading...'
        spinner.style.display = ''; // Show the spinner
        statusHeader.innerHTML = '<h4>Transcribing...</h4>';

        const formData = new FormData();
        formData.append('audio', audioFile);

        // Add headers to the fetch request
        const headers = new Headers({
            'X-API-KEY': '{{ current_user.api_key }}'
        });

        fetch('/api/transcribe', { // Ensure this matches your Flask route
            headers: headers,
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            // statusMessage.textContent = 'Upload successful!';
            // Check if the data contains the transcription result
            statusHeader.innerHTML = '<h4>Transcriptions:</h4>';
            if (data.content && data.content.full_text_timestamped) {
                // statusMessage.innerHTML = `<p class="lead mb-3"><span class="badge bg-secondary" id="text-entry" onclick="copyToClipboard(this.parentNode)">Transcription:</span> ${data.content.full_text}</p>`;
                statusMessage.innerHTML += `<p class="lead mb-3">
                    {% if config['SMTP_ENABLED'] %}
                    <a title="Email this to yourself" href="#" onclick="sendEmailWithFetch(this.parentNode)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                            <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
                        </svg>
                    </a>
                    {% endif %}
                    <a title="Copy this text" href="#" onclick="copyToClipboard(this.parentNode)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
                        </svg>
                    </a>
                    ${data.content.full_text}
                </p>`;
                statusMessage.style.display = 'block'; // Make sure to display the div if it was hidden
            } else {
                statusHeader.innerHTML = 'Transcription failed or no transcription available.';
                statusMessage.style.display = 'block';
            }
            console.log(data); // Handle the response data
        })
        .catch(error => {
            // Handle any errors
            console.error(error);
        })
        .finally(() => {
            submitButton.disabled = false;  // Re-enable the button
            submitButton.innerText = 'Submit';  // Change button text back to 'Submit'
            spinner.style.display = 'none'; // Hide the spinner
        });
    };
});
</script>
{% endblock %}